name: GH Actions CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Commits to develop/master will cancel each other, but PRs will only cancel
  # commits within the same PR
  group: "${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  gen_matrix:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.get-mdakits.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - id: get-python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - id: get-mdakits
        run: |
          mdakit=$(python utils/get_dir_matrix.py)
          echo "::set-output name=matrix::${mdakit}"

  mdakit-ci:
    needs: gen_matrix
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        mdakit: ${{fromJSON(needs.gen_matrix.outputs.matrix)}}
        jobstep: ['latest', 'develop']
    steps:
      - uses: actions/checkout@v3

      - id: prev-python-ver
        uses: MDAnalysis/get-latest-python-version@main
        with:
          last-n-minor-release: 1

      - id: get-base-python-deps
        run: |
          pip install pyyaml packaging

      - id: check-set-python-bounds
        run: |
          basepy=${{steps.prev-python-ver.outputs.python-version}}
          pyver=$(python utils/checkpython-ver.py --mdakit "${{matrix.mdakit}}" --pyver ${basepy})
          echo "PYVER=${pyver}" >> $GITHUB_ENV
          
          #      - id: install conda env
          #        uses: conda-incubator/setup-miniconda@v2
          #        with:
          #          python-version: ${{ env.PYVER }}
          #          add-pip-as-python-dependency: true
          #          architecture: x64
          #          mamba-version: "*"
          #          channels: conda-forge, defaults
          #          channel-priority: flexible
          #          auto-update-conda: true
          #          show-channel-urls: true
          #
          #       - id: install mdakit
          #         run: |
          #          if $[[ {{ matrix.jobstep }} == "develop" ]]; then
          #            field="src_install"
          #          else
          #            field="install"
          #          fi
          #
          #          install=$(python utils/extract-yaml.py --field ${field})
          #          echo "install=${install}"
          #          eval ${install}
          #
          #       - id: install test requirements
          #         run: |
          #           install=$(python utils/extract-yaml.py --field "test_dependencies")
          #           echo "install tests:${install}"
          #           eval ${install}
          #
          #       - id: install mdanalysis
          #         uses: MDAnalysis/install-mdanalysis@main
          #         with:
          #           version: ${{ matrix.jobstep }}
          #           install-tests: false
          #           installer: mamba
          #           shell: bash -l {0}
          #
          #       - id: install extras
          #         run: |
          #           mamba install pyyaml
          #
          #       - id: run tests
          #         run: |
          #           tests=$(python utils/extract-yaml.py --field "run_tests")
          #           echo "tests: ${tests}"
          #           eval ${tests}
